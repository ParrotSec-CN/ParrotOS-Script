#!/bin/bash
set -e
DEBIAN_FRONTEND="noninteractive"
DEBIAN_PRIORITY="critical"
DEBCONF_NOWARNINGS="yes"
export DEBIAN_FRONTEND DEBIAN_PRIORITY DEBCONF_NOWARNINGS
Green_font_prefix="\033[41;37m"
Font_color_suffix="\033[5m"
Clean_color_suffix="\033[0m"
Blue_red_prefix="\033[46;31m"

Info="${Font_color_suffix}${Green_font_prefix}[Info]${Clean_color_suffix}"
Right="${Font_color_suffix}${Green_font_prefix}[ --> ]${Clean_color_suffix}"

function kill_updateprocess()
{
    ps -aux | grep apt | awk '{print $2}' | grep -v grep | xargs kill -9 2>/dev/null
    ps -aux | grep dpkg | awk '{print $2}' | grep -v grep | xargs kill -9 2>/dev/null
}

function fix_subprocess()
{
    mv /var/lib/dpkg/info/ /var/lib/dpkg/info_bak
    mkdir /var/lib/dpkg/info
    apt update --fix-missing
    apt install -f
    apt autoremove -y
    mv /var/lib/dpkg/info/* /var/lib/dpkg/info_bak/
    rm -rf /var/lib/dpkg/info
    mv /var/lib/dpkg/info_bak/ /var/lib/dpkg/info
}

function remove_clean()
{
    echo -e ""
    echo -e "${Info} 清除无用软件包，并清理相关垃圾文件"
    apt -y autoremove
    apt -y clean autoclean
}

function upgradable()
{
    echo -e ""
    echo -e "${Info} 查看可升级的软件包"
    apt list --upgradable -a
}

function write_source()
{
    echo -e ""
    echo -e "${Info} 执行写入官方源到parrot.list文件"
    echo -e "# parrot repository\n# this file was automatically generated by parrot-mirror-selector" > /etc/apt/sources.list.d/parrot.list
    echo -e "\ndeb https://deb.parrot.sh/parrot/ rolling main contrib non-free\n#deb-src https://deb.parrot.sh/parrot/ rolling main contrib non-free" >> /etc/apt/sources.list.d/parrot.list
    echo -e "\ndeb https://deb.parrot.sh/parrot/ rolling-security main contrib non-free\n#deb-src https://deb.parrot.sh/parrot/ rolling-security main contrib non-free" >> /etc/apt/sources.list.d/parrot.list
    echo -e ""
    echo -e "${Info} 更新系统"
}

function write_sjtug_source()
{
    echo -e ""
    echo -e "${Info} 执行写入交大源到parrot.list文件"
    echo -e "# parrot repository\n# this file was automatically generated by parrot-mirror-selector" > /etc/apt/sources.list.d/parrot.list
    echo -e "\ndeb https://mirrors.sjtug.sjtu.edu.cn/parrot/ rolling main contrib non-free\n#deb-src https://deb.parrot.sh/parrot/ rolling main contrib non-free" >> /etc/apt/sources.list.d/parrot.list
    echo -e "\ndeb https://mirrors.sjtug.sjtu.edu.cn/parrot/ rolling-security main contrib non-free\n#deb-src https://deb.parrot.sh/parrot/ rolling-security main contrib non-free" >> /etc/apt/sources.list.d/parrot.list
    echo -e ""
    echo -e "${Info} 更新系统"
}

function write_tsinghua_source()
{
    echo -e ""
    echo -e "${Info} 执行写入清华源到parrot.list文件"
    echo -e "# parrot repository\n# this file was automatically generated by parrot-mirror-selector" > /etc/apt/sources.list.d/parrot.list
    echo -e "\ndeb https://mirrors.tuna.tsinghua.edu.cn/parrot/ rolling main contrib non-free\n#deb-src https://deb.parrot.sh/parrot/ rolling main contrib non-free" >> /etc/apt/sources.list.d/parrot.list
    echo -e "\ndeb https://mirrors.tuna.tsinghua.edu.cn/parrot/ rolling-security main contrib non-free\n#deb-src https://deb.parrot.sh/parrot/ rolling-security main contrib non-free" >> /etc/apt/sources.list.d/parrot.list
    echo -e ""
    echo -e "${Info} 更新系统"
}

function write_ustc_source()
{
    echo -e ""
    echo -e "${Info} 执行写入中科大源到parrot.list文件"
    echo -e "# parrot repository\n# this file was automatically generated by parrot-mirror-selector" > /etc/apt/sources.list.d/parrot.list
    echo -e "\ndeb http://mirrors.ustc.edu.cn/parrot/ rolling main contrib non-free\n#deb-src https://deb.parrot.sh/parrot/ rolling main contrib non-free" >> /etc/apt/sources.list.d/parrot.list
    echo -e "\ndeb http://mirrors.ustc.edu.cn/parrot/ rolling-security main contrib non-free\n#deb-src https://deb.parrot.sh/parrot/ rolling-security main contrib non-free" >> /etc/apt/sources.list.d/parrot.list
    echo -e ""
    echo -e "${Info} 更新系统"
}

function update()
{
    echo -e ""
    echo -e "${Info} 执行apt update"
    apt update || echo failed to update index lists
    echo -e ""
    echo -e "${Info} 执行dpkg --configure"
    dpkg --configure -a || echo failed to fix interrupted upgrades
    echo -e ""
    echo -e "${Info} 执行apt --fix-broken --fix-missing"
    apt --fix-broken --fix-missing install || echo failed to fix conflicts
    echo -e ""
    echo -e "${Info} 执行apt --allow-downgrades --fix-broken --fix-missing"
    apt -y --allow-downgrades --fix-broken --fix-missing dist-upgrade
}

function proxy_update()
{
    proxychains apt update || echo failed to update index lists
    proxychains dpkg --configure -a || echo failed to fix interrupted upgrades
    proxychains apt --fix-broken --fix-missing install || echo failed to fix conflicts
    proxychains apt -y --allow-downgrades --fix-broken --fix-missing dist-upgrade
}

echo -e ""
echo -e "${Right}1.使用当前源直接更新"
echo -e "${Right}2.国内(清华/中科大/交大源)"
echo -e "${Right}3.国外(官方源)"
echo -e "${Right}4.修复E:Sub-process /usr/bin/dpkg ..."
echo -e "${Right}5.杀掉更新进程"

echo -e ""
echo -n -e "${Info} 请选择: "
read key

if [ "$key" = "1" ]
then
    echo -e ""
    echo -e "${Info} 更新系统"
    update
    remove_clean
    upgradable
elif [ "$key" = "2" ]
then
    echo -e ""
    echo -n -e "${Info} 请选择(清华[qh]/中科大[zkd]/交大[jd]): "
    read cn_source_key
    echo -e ""
    if [ "$cn_source_key" = "qh" ]
    then
    	echo -e "${Info} 当前已选择清华源"
    	sleep 1
	write_tsinghua_source
    elif [ "$cn_source_key" = "zkd" ]
    then
    	echo -e "${Info} 当前已选择中科大源"
    	sleep 1
	write_ustc_source
    elif [ "$cn_source_key" = "jd" ]
    then
    	echo -e "${Info} 当前已选择交大源"
    	sleep 1
	write_sjtug_source
    else
    	echo -e "${Info} 您当前未做出选择，默认选择清华源"
    	sleep 1
	write_tsinghua_source
    fi
    update
    remove_clean
    upgradable
elif [ "$key" = "3" ]
then
    echo -e ""
    echo -e "${Info} 当前即将选择官网环境(建议配置Proxychains，这样下载速度快一些)"
    echo -e ""
    echo -n -e "${Info} 你选择使用Proxychains么（Y/N）: "
    read warning
    if [ "$warning" = "Y" ] || [ "$warning" = "y" ]
    then
        sleep 1
        write_source
        proxy_update
        remove_clean
        upgradable
    else
        sleep 1
        write_source
        update
        remove_clean
        upgradable
    fi
elif [ "$key" = "4" ]
then
    echo -e ""
    echo -e "${Info} 修复E:Sub-process /usr/bin/dpkg returned an error code(1)"
    fix_subprocess
    echo -e ""
    echo -e "${Info} 修复完成"
elif [ "$key" = "5" ]
then
    echo -e ""
    echo -e "${Info} 杀掉更新进程"
    kill_updateprocess
    echo -e ""
    echo -e "${Info} 相关进程均已关闭"
fi
